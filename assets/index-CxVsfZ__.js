(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function d(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(t){if(t.ep)return;t.ep=!0;const o=d(t);fetch(t.href,o)}})();const s={url:"",todos:"todos",create:"create",update:"update",del:"delete",login:"login",register:"register"},f=sessionStorage.getItem("authenticated");f!=="true"&&(window.location.href="./login.html");const g=JSON.parse(sessionStorage.getItem("creds")),a=btoa(`${g.email}:${g.password}`);var p=[],c=null;const l=`${s.url}/${s.todos}`;document.getElementById("logout").addEventListener("click",()=>{sessionStorage.removeItem("creds"),sessionStorage.setItem("authenticated","false"),window.location.href="./login.html"});async function u(){try{const n=await fetch(l,{method:"POST",headers:{Authorization:`Basic ${a}`}});if(!n.ok)throw new Error(`Response status: ${n.status}`);p=await n.json(),h()}catch(n){console.error(n)}}function h(){const n=document.getElementById("todosList");n.innerHTML="",p.forEach(e=>{const d=document.createElement("div");d.className="todo-item";const i=document.createElement("div");i.innerHTML=`
          <strong>${e.title}</strong> - ${e.description} - ${e.dueDate} - ${e.priority} - ${e.category}
      `;const t=document.createElement("div"),o=document.createElement("button");o.innerText="Delete",o.onclick=()=>B(e.id);const r=document.createElement("button");r.innerText="Edit",r.onclick=()=>I(e.id),t.appendChild(r),t.appendChild(o),d.appendChild(i),d.appendChild(t),n.appendChild(d)})}async function E(){const n=document.getElementById("title").value,e=document.getElementById("description").value,d=document.getElementById("dueDate").value,i=document.getElementById("priority").value,t=document.getElementById("category").value;if(n&&e&&d&&i&&t){const o={title:n,description:e,completed:!1,dueDate:d,priority:i,category:t};if(c){try{const r=await fetch(`${l}/${s.update}/${c}`,{method:"PUT",body:JSON.stringify(o),headers:{"Content-Type":"application/json",Authorization:`Basic ${a}`}});if(!r.ok)throw new Error("Failed to update todo");const m=await r.json();console.log(m),document.getElementById("add-todo").innerHTML="Add Todo",u(),y()}catch(r){console.error("Error updating todo:",r)}c=null}else try{const r=await fetch(`${l}/${s.create}`,{method:"POST",body:JSON.stringify(o),headers:{"Content-Type":"application/json",Authorization:`Basic ${a}`}});if(!r.ok)throw new Error("Failed to add todo");const m=await r.json();console.log(m),u(),y()}catch(r){console.error("Error adding todo:",r)}}else alert("Please fill in all fields")}async function B(n){try{const e=await fetch(`${l}/${s.del}/${n}`,{method:"DELETE",headers:{Authorization:`Basic ${a}`}});if(!e.ok)throw new Error("Failed to Delete todo");const d=await e.json();console.log(d),u()}catch(e){console.error("Error deleteing todo:",e)}}async function I(n){const e=p.find(({id:d})=>d==n);document.getElementById("title").value=e.title,document.getElementById("description").value=e.description,document.getElementById("dueDate").value=e.dueDate,document.getElementById("priority").value=e.priority,document.getElementById("category").value=e.category,document.getElementById("add-todo").innerHTML="Edit Todo",c=n}function y(){document.getElementById("title").value="",document.getElementById("description").value="",document.getElementById("dueDate").value="",document.getElementById("priority").value="High",document.getElementById("category").value=""}u();const v=document.getElementById("add-todo");v.addEventListener("click",()=>{E()});
