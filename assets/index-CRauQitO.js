(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))d(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&d(n)}).observe(document,{childList:!0,subtree:!0});function s(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function d(t){if(t.ep)return;t.ep=!0;const o=s(t);fetch(t.href,o)}})();const i={url:"https://lf-se-fellowship-node-assignment-todos.onrender.com",todos:"todos",create:"create",update:"update",del:"delete",login:"login",register:"register"};document.addEventListener("DOMContentLoaded",()=>{const r=document.getElementById("loginForm"),e=document.getElementById("loginMessage");r.addEventListener("submit",async s=>{s.preventDefault();const d=document.getElementById("email").value,t=document.getElementById("password").value;try{const o=await fetch(`${i.url}/${i.login}`,{method:"POST",body:JSON.stringify({email:d,password:t}),headers:{"Content-Type":"application/json"}});if(!o.ok)throw e.innerText="Network response was not ok",new Error("Network response was not ok");const n=await o.json();console.log(n),e.innerText=n,sessionStorage.setItem("authenticated","true"),document.getElementById("login-container").style.display="none",document.getElementById("main-container").style.display="flex",sessionStorage.setItem("creds",JSON.stringify({email:d,password:t}))}catch(o){console.error("Error Logging In:",o),e.innerText="Invalid Credentials"}}),document.getElementById("registerButton").addEventListener("click",async function(){const s=document.getElementById("email").value,d=document.getElementById("password").value;try{const t=await fetch(`${i.url}/${i.register}`,{method:"POST",body:JSON.stringify({email:s,password:d}),headers:{"Content-Type":"application/json"}});if(!t.ok)throw e.innerText="Network response was not ok",new Error("Network response was not ok");const o=await t.json();console.log(o),e.innerText=o,sessionStorage.setItem("authenticated","true"),sessionStorage.setItem("creds",JSON.stringify({email:s,password:d})),window.location.href="../index.html"}catch(t){console.error("Error Registering:",t),e.innerText="User Already Exists"}})});const f=sessionStorage.getItem("authenticated");f!=="true"&&(document.getElementById("login-container").style.display="block",document.getElementById("main-container").style.display="none");const y=JSON.parse(sessionStorage.getItem("creds")),c=btoa(`${y.email}:${y.password}`);var g=[],a=null;const l=`${i.url}/${i.todos}`;document.getElementById("logout").addEventListener("click",()=>{sessionStorage.removeItem("creds"),sessionStorage.setItem("authenticated","false"),document.getElementById("login-container").style.display="block",document.getElementById("main-container").style.display="none"});async function u(){try{const r=await fetch(l,{method:"POST",headers:{Authorization:`Basic ${c}`}});if(!r.ok)throw new Error(`Response status: ${r.status}`);g=await r.json(),E()}catch(r){console.error(r)}}function E(){const r=document.getElementById("todosList");r.innerHTML="",g.forEach(e=>{const s=document.createElement("div");s.className="todo-item";const d=document.createElement("div");d.innerHTML=`
          <strong>${e.title}</strong> - ${e.description} - ${e.dueDate} - ${e.priority} - ${e.category}
      `;const t=document.createElement("div"),o=document.createElement("button");o.innerText="Delete",o.onclick=()=>I(e.id);const n=document.createElement("button");n.innerText="Edit",n.onclick=()=>w(e.id),t.appendChild(n),t.appendChild(o),s.appendChild(d),s.appendChild(t),r.appendChild(s)})}async function h(){const r=document.getElementById("title").value,e=document.getElementById("description").value,s=document.getElementById("dueDate").value,d=document.getElementById("priority").value,t=document.getElementById("category").value;if(r&&e&&s&&d&&t){const o={title:r,description:e,completed:!1,dueDate:s,priority:d,category:t};if(a){try{const n=await fetch(`${l}/${i.update}/${a}`,{method:"PUT",body:JSON.stringify(o),headers:{"Content-Type":"application/json",Authorization:`Basic ${c}`}});if(!n.ok)throw new Error("Failed to update todo");const m=await n.json();console.log(m),document.getElementById("add-todo").innerHTML="Add Todo",u(),p()}catch(n){console.error("Error updating todo:",n)}a=null}else try{const n=await fetch(`${l}/${i.create}`,{method:"POST",body:JSON.stringify(o),headers:{"Content-Type":"application/json",Authorization:`Basic ${c}`}});if(!n.ok)throw new Error("Failed to add todo");const m=await n.json();console.log(m),u(),p()}catch(n){console.error("Error adding todo:",n)}}else alert("Please fill in all fields")}async function I(r){try{const e=await fetch(`${l}/${i.del}/${r}`,{method:"DELETE",headers:{Authorization:`Basic ${c}`}});if(!e.ok)throw new Error("Failed to Delete todo");const s=await e.json();console.log(s),u()}catch(e){console.error("Error deleteing todo:",e)}}async function w(r){const e=g.find(({id:s})=>s==r);document.getElementById("title").value=e.title,document.getElementById("description").value=e.description,document.getElementById("dueDate").value=e.dueDate,document.getElementById("priority").value=e.priority,document.getElementById("category").value=e.category,document.getElementById("add-todo").innerHTML="Edit Todo",a=r}function p(){document.getElementById("title").value="",document.getElementById("description").value="",document.getElementById("dueDate").value="",document.getElementById("priority").value="High",document.getElementById("category").value=""}u();const B=document.getElementById("add-todo");B.addEventListener("click",()=>{h()});
